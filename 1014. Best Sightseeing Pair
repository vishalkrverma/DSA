class Solution {
    public int maxScoreSightseeingPair(int[] values) {
       int maxLeft = values[0]; // Initialize with the first value + index (values[0] + 0)
        int maxScore = 0;

        for (int j = 1; j < values.length; j++) {
            // Calculate the score for the current pair
            maxScore = Math.max(maxScore, maxLeft + values[j] - j);
            // Update maxLeft to include the current index
            maxLeft = Math.max(maxLeft, values[j] + j);
        }
        return maxScore;
   }
}
