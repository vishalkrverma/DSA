class Solution {
    
    static class Pair{
        int pos;
        Node root;
        public Pair(int pos, Node root){
            this.pos=pos;
            this.root=root;
        }
        
    }
    // Function to return a list of nodes visible from the top view
    // from left to right in Binary Tree.
    static ArrayList<Integer> topView(Node root) {
        // code here
        ArrayList<Integer> result= new ArrayList<>();
        if(root==null){
            return result;
        }
        Queue<Pair> q= new LinkedList<>();
        TreeMap<Integer,Integer> map= new TreeMap<>();
        q.add(new Pair(0,root));
        
        while(!q.isEmpty()){
            Pair temp=q.poll();
            if(!map.containsKey(temp.pos)){
                map.put(temp.pos,temp.root.data);
            }
            if(temp.root.left!=null){
                q.add(new Pair(temp.pos-1,temp.root.left));
            }
            if(temp.root.right!=null){
                q.add(new Pair(temp.pos+1,temp.root.right));
            }
        }
        // result.addAll(map.values());
        for(int key:map.values()){
            result.add(key);
        }
        return result;
        
    }
}
